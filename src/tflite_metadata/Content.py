# automatically generated by the FlatBuffers compiler, do not modify

# namespace: tflite

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class Content(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = Content()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsContent(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def ContentBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x4D\x30\x30\x31", size_prefixed=size_prefixed)

    # Content
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Content
    def ContentPropertiesType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # Content
    def ContentProperties(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            from flatbuffers.table import Table
            obj = Table(bytearray(), 0)
            self._tab.Union(obj, o)
            return obj
        return None

    # Content
    def Range(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from tflite.ValueRange import ValueRange
            obj = ValueRange()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def ContentStart(builder): builder.StartObject(3)
def Start(builder):
    return ContentStart(builder)
def ContentAddContentPropertiesType(builder, contentPropertiesType): builder.PrependUint8Slot(0, contentPropertiesType, 0)
def AddContentPropertiesType(builder, contentPropertiesType):
    return ContentAddContentPropertiesType(builder, contentPropertiesType)
def ContentAddContentProperties(builder, contentProperties): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(contentProperties), 0)
def AddContentProperties(builder, contentProperties):
    return ContentAddContentProperties(builder, contentProperties)
def ContentAddRange(builder, range): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(range), 0)
def AddRange(builder, range):
    return ContentAddRange(builder, range)
def ContentEnd(builder): return builder.EndObject()
def End(builder):
    return ContentEnd(builder)